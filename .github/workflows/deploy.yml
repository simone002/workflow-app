name: Deploy to AWS

on:
  push:
    branches:
      - master

jobs:
  deploy-backend:
    name: Deploy Backend to ECS
    runs-on: ubuntu-latest
    outputs:
      backend_ip: ${{ steps.get_ip.outputs.ip }}
      aws_region: eu-west-1
      cognito_pool_id: ${{ steps.get_cognito_pool.outputs.pool_id }}
      cognito_client_id: ${{ steps.get_cognito_client.outputs.client_id }}

    steps:
      - name: Checkout del codice
        uses: actions/checkout@v3

      - name: Configura le credenziali AWS
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Login a Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, e push dell'immagine su ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: workflow-backend
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./backend
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Esegui lo script di deploy
        run: |
          chmod +x ./deploy.sh
          ./deploy.sh
      
      # --- COMANDI CORRETTI CON AWK ---
      - name: Get Backend IP
        id: get_ip
        run: echo "ip=$(grep 'Backend API:' deploy-config.txt | awk '{print $NF}' | sed 's|http://||' | cut -d':' -f1)" >> $GITHUB_OUTPUT

      - name: Get Cognito Pool ID
        id: get_cognito_pool
        run: echo "pool_id=$(grep 'Cognito User Pool:' deploy-config.txt | awk '{print $NF}')" >> $GITHUB_OUTPUT
        
      - name: Get Cognito Client ID
        id: get_cognito_client
        run: echo "client_id=$(grep 'Cognito Client:' deploy-config.txt | awk '{print $NF}')" >> $GITHUB_OUTPUT

  deploy-frontend:
    name: Deploy Frontend to S3
    runs-on: ubuntu-latest
    needs: deploy-backend
    steps:
      - name: Checkout del codice
        uses: actions/checkout@v3

      - name: Configura le credenziali AWS
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ needs.deploy-backend.outputs.aws_region }}
      
      - name: Setup di Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Create .env file for Frontend
        run: |
          echo "REACT_APP_API_URL=http://${{ needs.deploy-backend.outputs.backend_ip }}:3000" >> ./frontend/.env
          echo "REACT_APP_AWS_REGION=${{ needs.deploy-backend.outputs.aws_region }}" >> ./frontend/.env
          echo "REACT_APP_COGNITO_USER_POOL_ID=${{ needs.deploy-backend.outputs.cognito_pool_id }}" >> ./frontend/.env
          echo "REACT_APP_COGNITO_CLIENT_ID=${{ needs.deploy-backend.outputs.cognito_client_id }}" >> ./frontend/.env
          echo "GENERATE_SOURCEMAP=false" >> ./frontend/.env
          echo "SKIP_PREFLIGHT_CHECK=true" >> ./frontend/.env
          
          echo "File .env del frontend creato con successo."
          cat ./frontend/.env

      - name: Installa le dipendenze e builda il frontend
        run: |
          cd frontend
          npm install
          npm run build

      - name: Deploy su S3
        run: |
          BUCKET_NAME=$(aws s3api list-buckets --query 'Buckets[?contains(Name, `workflow-frontend`)].Name' --output text | head -1)
          aws s3 sync ./frontend/build s3://$BUCKET_NAME --delete